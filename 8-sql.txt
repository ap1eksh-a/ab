8. Consider the following database
Employee(emp_no,name,skill,pay-rate) eno primary key
Position(posting_no,skill) posting_no primary key
Duty_allocation(posting_no,emp_no,day,shift)
Find the SQL queries for the following:
1. Get the duty allocation details for emp_no 123461 for the month of April 1986.
2. Find the shift details for Employee ‘xyz’
3. Get employees whose rate of pay is more than or equal to the rate of pay of employee ‘xyz’
4. Get the names and pay rates of employees with emp_no less than 123460 whose rate of pay is
more than the rate of pay of at least one employee with emp_no greater than or equal to 123460.
5. Find the names of employees who are assigned to all positions that require a Chef’s skill
6 .Find the employees with the lowest pay rate
7 .Get the employee numbers of all employees working on at least two dates.
8 .Get a list of names of employees with the skill of Chef who are assigned a duty
9 .Get a list of employees not assigned a duty
10.Get a count of different employees on each shift

CREATE TABLE Employee (
    emp_no INT PRIMARY KEY,
    name VARCHAR(100),
    skill VARCHAR(50),
    pay_rate DECIMAL(10, 2)
);

-- Position Table
CREATE TABLE Position (
    posting_no INT PRIMARY KEY,
    skill VARCHAR(50)
);

-- Duty Allocation Table
CREATE TABLE Duty_allocation (
    posting_no INT,
    emp_no INT,
    day DATE,
    shift VARCHAR(10),
    FOREIGN KEY (posting_no) REFERENCES Position(posting_no),
    FOREIGN KEY (emp_no) REFERENCES Employee(emp_no)
);
Step 2: Insert Sample Data
sql
Copy code
-- Insert values into Employee table
INSERT INTO Employee (emp_no, name, skill, pay_rate) VALUES
(123456, 'John Doe', 'Chef', 5000.00),
(123457, 'Jane Smith', 'Chef', 5500.00),
(123458, 'Michael Lee', 'Waiter', 3000.00),
(123459, 'Emma Brown', 'Chef', 6000.00),
(123460, 'xyz', 'Chef', 4000.00),
(123461, 'Oliver Green', 'Waiter', 3500.00);

-- Insert values into Position table
INSERT INTO Position (posting_no, skill) VALUES
(101, 'Chef'),
(102, 'Waiter'),
(103, 'Chef');

-- Insert values into Duty_allocation table
INSERT INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES
(101, 123456, '1986-04-01', 'Morning'),
(101, 123457, '1986-04-01', 'Evening'),
(102, 123458, '1986-04-02', 'Morning'),
(103, 123460, '1986-04-01', 'Night'),
(101, 123461, '1986-04-01', 'Morning'),
(102, 123456, '1986-04-03', 'Evening'),
(103, 123457, '1986-04-02', 'Night');
Step 3: SQL Queries for the Given Tasks
Get the duty allocation details for emp_no 123461 for the month of April 1986.

sql
Copy code
SELECT D.posting_no, D.day, D.shift
FROM Duty_allocation D
WHERE D.emp_no = 123461 AND D.day BETWEEN '1986-04-01' AND '1986-04-30';
Find the shift details for Employee ‘xyz’.

sql
Copy code
SELECT D.shift, D.day
FROM Duty_allocation D
JOIN Employee E ON D.emp_no = E.emp_no
WHERE E.name = 'xyz';
Get employees whose rate of pay is more than or equal to the rate of pay of employee ‘xyz’.

sql
Copy code
SELECT E.emp_no, E.name, E.pay_rate
FROM Employee E
WHERE E.pay_rate >= (SELECT pay_rate FROM Employee WHERE name = 'xyz');
Get the names and pay rates of employees with emp_no less than 123460 whose rate of pay is more than the rate of pay of at least one employee with emp_no greater than or equal to 123460.

sql
Copy code
SELECT E.name, E.pay_rate
FROM Employee E
WHERE E.emp_no < 123460
AND E.pay_rate > (SELECT MIN(pay_rate) FROM Employee WHERE emp_no >= 123460);
Find the names of employees who are assigned to all positions that require a Chef’s skill.

sql
Copy code
SELECT E.name
FROM Employee E
JOIN Duty_allocation D ON E.emp_no = D.emp_no
JOIN Position P ON D.posting_no = P.posting_no
WHERE P.skill = 'Chef'
GROUP BY E.name
HAVING COUNT(DISTINCT P.posting_no) = (SELECT COUNT(*) FROM Position WHERE skill = 'Chef');
Find the employees with the lowest pay rate.

sql
Copy code
SELECT E.name, E.pay_rate
FROM Employee E
WHERE E.pay_rate = (SELECT MIN(pay_rate) FROM Employee);
Get the employee numbers of all employees working on at least two dates.

sql
Copy code
SELECT emp_no
FROM Duty_allocation
GROUP BY emp_no
HAVING COUNT(DISTINCT day) >= 2;
Get a list of names of employees with the skill of Chef who are assigned a duty.

sql
Copy code
SELECT E.name
FROM Employee E
JOIN Duty_allocation D ON E.emp_no = D.emp_no
WHERE E.skill = 'Chef';
Get a list of employees not assigned a duty.

sql
Copy code
SELECT E.name
FROM Employee E
LEFT JOIN Duty_allocation D ON E.emp_no = D.emp_no
WHERE D.emp_no IS NULL;
Get a count of different employees on each shift.

sql
Copy code
SELECT D.shift, COUNT(DISTINCT D.emp_no) AS employee_count
FROM Duty_allocation D
GROUP BY D.shift;