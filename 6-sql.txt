6. The following tables form part of a database held in a relational DBMS:
Hotel (HotelNo, Name, City)
Room (RoomNo, HotelNo, Type, Price)
Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
Guest (GuestNo, GuestName, GuestAddress)
Solve following queries by SQL
1. List full details of all hotels.
2. List full details of all hotels in London.
3. List all guests currently staying at the Grosvenor Hotel.
4. List the names and addresses of all guests in London, alphabetically ordered by name.
5. List the bookings for which no date_to has been specified.
6. How many hotels are there?
7. List the rooms that are currently unoccupied at the Grosvenor Hotel.
8. What is the lost income from unoccupied rooms at each hotel today?
9. Create index on one of the field and show is performance in query.
10. Create one view on above database and query it.

CREATE TABLE Hotel (
    HotelNo INT PRIMARY KEY,
    Name VARCHAR(50),
    City VARCHAR(50)
);

-- Room Table
CREATE TABLE Room (
    RoomNo INT,
    HotelNo INT,
    Type VARCHAR(20),
    Price DECIMAL(10, 2),
    PRIMARY KEY (RoomNo, HotelNo),
    FOREIGN KEY (HotelNo) REFERENCES Hotel(HotelNo)
);

-- Guest Table
CREATE TABLE Guest (
    GuestNo INT PRIMARY KEY,
    GuestName VARCHAR(50),
    GuestAddress VARCHAR(100)
);

-- Booking Table
CREATE TABLE Booking (
    HotelNo INT,
    GuestNo INT,
    DateFrom DATE,
    DateTo DATE,
    RoomNo INT,
    PRIMARY KEY (HotelNo, GuestNo, DateFrom),
    FOREIGN KEY (HotelNo, RoomNo) REFERENCES Room(HotelNo, RoomNo),
    FOREIGN KEY (GuestNo) REFERENCES Guest(GuestNo)
);
Step 2: Insert Sample Data
sql
Copy code
-- Insert values into Hotel table
INSERT INTO Hotel (HotelNo, Name, City) VALUES
(1, 'Grosvenor Hotel', 'London'),
(2, 'Hilton', 'Paris'),
(3, 'Ritz', 'New York'),
(4, 'Marriott', 'London');

-- Insert values into Room table
INSERT INTO Room (RoomNo, HotelNo, Type, Price) VALUES
(101, 1, 'Double', 100.00),
(102, 1, 'Single', 80.00),
(103, 1, 'Family', 120.00),
(201, 2, 'Single', 90.00),
(202, 2, 'Suite', 200.00),
(301, 3, 'Double', 150.00),
(302, 3, 'Family', 120.00),
(401, 4, 'Suite', 250.00),
(402, 4, 'Double', 110.00);

-- Insert values into Guest table
INSERT INTO Guest (GuestNo, GuestName, GuestAddress) VALUES
(1, 'Alice Brown', '123 Elm St, London'),
(2, 'Bob Smith', '456 Oak St, London'),
(3, 'Charlie Green', '789 Maple Ave, Paris'),
(4, 'Daisy Blue', '101 Pine St, New York');

-- Insert values into Booking table
INSERT INTO Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo) VALUES
(1, 1, '2024-08-10', '2024-08-15', 101),
(1, 2, CURDATE(), NULL, 102),  -- Currently staying at Grosvenor Hotel, with no end date
(2, 3, '2024-08-05', '2024-08-10', 201),
(4, 4, '2024-08-01', '2024-08-07', 401);
Step 3: SQL Queries
List full details of all hotels.

sql
Copy code
SELECT * FROM Hotel;
List full details of all hotels in London.

sql
Copy code
SELECT * FROM Hotel WHERE City = 'London';
List all guests currently staying at the Grosvenor Hotel.

sql
Copy code
SELECT g.GuestName, g.GuestAddress
FROM Booking b
JOIN Room r ON b.RoomNo = r.RoomNo AND b.HotelNo = r.HotelNo
JOIN Hotel h ON r.HotelNo = h.HotelNo
JOIN Guest g ON b.GuestNo = g.GuestNo
WHERE h.Name = 'Grosvenor Hotel' 
  AND (CURDATE() BETWEEN b.DateFrom AND COALESCE(b.DateTo, CURDATE()));
List the names and addresses of all guests in London, alphabetically ordered by name.

sql
Copy code
SELECT GuestName, GuestAddress
FROM Guest
WHERE GuestAddress LIKE '%London%'
ORDER BY GuestName ASC;
List the bookings for which no DateTo has been specified.

sql
Copy code
SELECT * FROM Booking WHERE DateTo IS NULL;
How many hotels are there?

sql
Copy code
SELECT COUNT(*) AS hotel_count FROM Hotel;
List the rooms that are currently unoccupied at the Grosvenor Hotel.

sql
Copy code
SELECT r.RoomNo, r.Type, r.Price
FROM Room r
LEFT JOIN Booking b ON r.RoomNo = b.RoomNo AND r.HotelNo = b.HotelNo 
                     AND CURDATE() BETWEEN b.DateFrom AND COALESCE(b.DateTo, CURDATE())
JOIN Hotel h ON r.HotelNo = h.HotelNo
WHERE h.Name = 'Grosvenor Hotel' AND b.RoomNo IS NULL;
What is the lost income from unoccupied rooms at each hotel today?

sql
Copy code
SELECT h.Name, SUM(r.Price) AS lost_income
FROM Room r
LEFT JOIN Booking b ON r.RoomNo = b.RoomNo AND r.HotelNo = b.HotelNo 
                     AND CURDATE() BETWEEN b.DateFrom AND COALESCE(b.DateTo, CURDATE())
JOIN Hotel h ON r.HotelNo = h.HotelNo
WHERE b.RoomNo IS NULL
GROUP BY h.Name;
Create an index on one of the fields and show its performance in a query.

Creating an index on the Type field of the Room table:

sql
Copy code
CREATE INDEX idx_room_type ON Room(Type);
Using the index for a performance test:

sql
Copy code
SELECT RoomNo, Type, Price FROM Room WHERE Type = 'Double';
Create one view on the above database and query it.

Creating a view to list all guests currently staying at each hotel:

sql
Copy code
CREATE VIEW CurrentStays AS
SELECT h.Name AS HotelName, g.GuestName, g.GuestAddress, b.DateFrom
FROM Booking b
JOIN Hotel h ON b.HotelNo = h.HotelNo
JOIN Guest g ON b.GuestNo = g.GuestNo
WHERE CURDATE() BETWEEN b.DateFrom AND COALESCE(b.DateTo, CURDATE());
Querying the view:

sql
Copy code
SELECT * FROM CurrentStays;