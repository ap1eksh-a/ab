-- Create Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    salary DECIMAL(10, 2),
    designation VARCHAR(50)
);

-- Create Salary_Backup table
CREATE TABLE Salary_Backup (
    emp_id INT,
    old_salary DECIMAL(10, 2),
    new_salary DECIMAL(10, 2),
    salary_difference DECIMAL(10, 2),
    PRIMARY KEY (emp_id, old_salary, new_salary)
);

-- Insert sample data into Employee table
INSERT INTO Employee (emp_id, emp_name, salary, designation) VALUES (1, 'John Doe', 50000, 'Manager');
INSERT INTO Employee (emp_id, emp_name, salary, designation) VALUES (2, 'Jane Smith', 75000, 'CEO');
INSERT INTO Employee (emp_id, emp_name, salary, designation) VALUES (3, 'Alice Johnson', 60000, 'Developer');
INSERT INTO Employee (emp_id, emp_name, salary, designation) VALUES (4, 'Bob Brown', 80000, 'Manager');
INSERT INTO Employee (emp_id, emp_name, salary, designation) VALUES (5, 'Charlie Davis', 90000, 'Developer');

-- Insert sample data into Salary_Backup table (this will show an initial entry)
INSERT INTO Salary_Backup (emp_id, old_salary, new_salary, salary_difference) 
VALUES (1, 50000, 52000, 2000);

-- Trigger for recording salary change
DELIMITER $$

CREATE TRIGGER record_salary_change
AFTER UPDATE ON Employee
FOR EACH ROW
BEGIN
    -- Insert record into Salary_Backup table
    INSERT INTO Salary_Backup (emp_id, old_salary, new_salary, salary_difference)
    VALUES (OLD.emp_id, OLD.salary, NEW.salary, NEW.salary - OLD.salary);
END $$

DELIMITER ;

-- Trigger to prevent deleting employee with designation 'CEO'
DELIMITER $$

CREATE TRIGGER prevent_delete_ceo
BEFORE DELETE ON Employee
FOR EACH ROW
BEGIN
    IF OLD.designation = 'CEO' THEN
        -- Raise an exception to prevent deletion
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cannot delete employee with designation CEO';
    END IF;
END $$

DELIMITER ;

-- Update an employee's salary to see the trigger in action
UPDATE Employee SET salary = 55000 WHERE emp_id = 1;

-- Query the Salary_Backup table to see the inserted record
SELECT * FROM Salary_Backup;

-- Attempt to delete the employee with designation 'CEO'
DELETE FROM Employee WHERE emp_id = 2;
