use myDatabase;

db.createCollection("Movies_Data");

db.Movies_Data.insertMany([
  { Movie_ID: 1, Movie_Name: "Inception", Director: "Christopher Nolan", Genre: "Sci-Fi", BoxOfficeCollection: 850 },
  { Movie_ID: 2, Movie_Name: "Interstellar", Director: "Christopher Nolan", Genre: "Sci-Fi", BoxOfficeCollection: 700 },
  { Movie_ID: 3, Movie_Name: "The Dark Knight", Director: "Christopher Nolan", Genre: "Action", BoxOfficeCollection: 1000 },
  { Movie_ID: 4, Movie_Name: "Titanic", Director: "James Cameron", Genre: "Romance", BoxOfficeCollection: 2200 },
  { Movie_ID: 5, Movie_Name: "Avatar", Director: "James Cameron", Genre: "Sci-Fi", BoxOfficeCollection: 2800 },
  { Movie_ID: 6, Movie_Name: "Pulp Fiction", Director: "Quentin Tarantino", Genre: "Crime", BoxOfficeCollection: 600 },
  { Movie_ID: 7, Movie_Name: "Kill Bill", Director: "Quentin Tarantino", Genre: "Action", BoxOfficeCollection: 450 },
  { Movie_ID: 8, Movie_Name: "The Godfather", Director: "Francis Ford Coppola", Genre: "Crime", BoxOfficeCollection: 750 },
  { Movie_ID: 9, Movie_Name: "The Godfather Part II", Director: "Francis Ford Coppola", Genre: "Crime", BoxOfficeCollection: 650 },
  { Movie_ID: 10, Movie_Name: "La La Land", Director: "Damien Chazelle", Genre: "Romance", BoxOfficeCollection: 450 }
]);
2. Display a List Stating How Many Movies Are Directed by Each Director
Use the $group stage to group by Director and count movies.

javascript
Copy code
db.Movies_Data.aggregate([
  { $group: { _id: "$Director", movieCount: { $sum: 1 } } }
]);
3. Display List of Movies with the Highest BoxOfficeCollection in Each Genre
Use the $sort stage to order by Genre and BoxOfficeCollection, then use $group to keep only the highest collection for each genre.

javascript
Copy code
db.Movies_Data.aggregate([
  { $sort: { Genre: 1, BoxOfficeCollection: -1 } },
  { $group: { _id: "$Genre", topMovie: { $first: "$Movie_Name" }, highestCollection: { $first: "$BoxOfficeCollection" } } }
]);
4. Display List of Movies with the Highest BoxOfficeCollection in Each Genre in Ascending Order of BoxOfficeCollection
After finding the highest BoxOfficeCollection in each genre, use $sort to order the output by BoxOfficeCollection in ascending order.

javascript
Copy code
db.Movies_Data.aggregate([
  { $sort: { Genre: 1, BoxOfficeCollection: -1 } },
  { $group: { _id: "$Genre", topMovie: { $first: "$Movie_Name" }, highestCollection: { $first: "$BoxOfficeCollection" } } },
  { $sort: { highestCollection: 1 } }
]);
5. Create an Index on the Movie_ID Field
javascript
Copy code
db.Movies_Data.createIndex({ Movie_ID: 1 });
6. Create an Index on the Movie_Name and Director Fields
javascript
Copy code
db.Movies_Data.createIndex({ Movie_Name: 1, Director: 1 });
7. Drop the Index on the Movie_ID Field
javascript
Copy code
db.Movies_Data.dropIndex("Movie_ID_1");
8. Drop the Index on the Movie_Name and Director Fields
javascript
Copy code
db.Movies_Data.dropIndex("Movie_Name_1_Director_1");